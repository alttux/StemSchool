; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Stemschool Tweaker"
#define MyAppVersion "1.4"
#define MyAppPublisher "AltTux, Inc."
#define MyAppURL "https://github.com/alttux/StemSchool/releases"
#define MyAppExeName "StemSchool.exe"
#define UserDir "roma-mac"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{AFF9D255-AAC0-4606-84F8-9E2F097FC322}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
UninstallDisplayIcon={app}\{#MyAppExeName}
; "ArchitecturesAllowed=x64compatible" specifies that Setup cannot run
; on anything but x64 and Windows 11 on Arm.
ArchitecturesAllowed=x64compatible
; "ArchitecturesInstallIn64BitMode=x64compatible" requests that the
; install be done in "64-bit mode" on x64 or Windows 11 on Arm,
; meaning it should use the native 64-bit Program Files directory and
; the 64-bit view of the registry.
ArchitecturesInstallIn64BitMode=x64compatible
DisableProgramGroupPage=yes
LicenseFile=C:\Users\{#UserDir}\Desktop\StemSchool\LICENSE.txt
; Uncomment the following line to run in non administrative install mode (install for current user only).
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=commandline
OutputDir=C:\Users\{#UserDir}\Desktop\StemSchool\bin\Release
OutputBaseFilename=Stemschool Tweaker Setup
SetupIconFile=C:\Users\{#UserDir}\Desktop\StemSchool\image_2025-03-18_07-00-51.ico
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "russian"; MessagesFile: "compiler:Languages\Russian.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "C:\Users\{#UserDir}\Desktop\StemSchool\bin\Release\net8.0-windows\win-x64\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "C:\Users\{#UserDir}\Desktop\StemSchool\bin\Release\net8.0-windows\win-x64\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "C:\Users\{#UserDir}\Desktop\StemSchool\windowsdesktop-runtime-8.0.18-win-x86.exe"; DestDir: "{app}"; Flags: deleteafterinstall
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
Filename: "{app}\windowsdesktop-runtime-8.0.18-win-x86.exe"; Parameters: "/silent"; StatusMsg: "Устанавливаем необходимые компоненты..."; BeforeInstall: PrepareDependency

[Code]
var
  DependencyPage: TOutputProgressWizardPage;

procedure PrepareDependency;
begin
  DependencyPage := CreateOutputProgressPage(
    'Установка зависимостей', 
    'Пожалуйста, подождите, пока устанавливаются необходимые компоненты...');
  DependencyPage.Show;
  try
    // Здесь можно добавить дополнительную подготовку
  finally
    DependencyPage.Hide;
  end;
end;

